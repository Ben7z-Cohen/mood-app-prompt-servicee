service: mood-app-prompt-service
frameworkVersion: '3'
provider:
  name: aws
  runtime: nodejs20.x
  stage: prod
  region: us-east-1
  environment:
      SECRET_NAME: "${env:SECRET_NAME}"  # ARN for Secrets Manager
      CONTEXT_DYNAMO_TABLE_NAME: "${env:CONTEXT_DYNAMO_TABLE_NAME}"
      SUMMARY_DYNAMO_TABLE_NAME: "${env:SUMMARY_DYNAMO_TABLE_NAME}"
      COGNITO_USER_POOL_ID: "${env:USER_POOL_ID}"       # Replace with the correct parameter name

  iamRoleStatements:
    - Effect: Allow
      Action:
        - secretsmanager:GetSecretValue
      Resource: "${env:SECRET_NAME}"  # Allow access to the Secrets Manager ARN
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:Scan
        - dynamodb:UpdateItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:${env:AWS_ACCOUNT_ID}:table/${self:provider.environment.CONTEXT_DYNAMO_TABLE_NAME}"
        - "arn:aws:dynamodb:${self:provider.region}:${env:AWS_ACCOUNT_ID}:table/${self:provider.environment.SUMMARY_DYNAMO_TABLE_NAME}"

functions:
  prompt:
    handler: src/prompt.handler
    events:
      - http:
          method: post
          path: prompt
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            arn: "arn:aws:cognito-idp:${self:provider.region}:${env:AWS_ACCOUNT_ID}:userpool/${self:provider.environment.COGNITO_USER_POOL_ID}"
            identitySource: "method.request.header.Authorization"

plugins:
  - serverless-offline
